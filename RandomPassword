import org.passay.CharacterRule;
import org.passay.EnglishCharacterData;
import org.passay.CharacterData;
import org.passay.PasswordGenerator;

import java.security.SecureRandom;

import java.util.Random;

public class RandomPasswordGenerator {

	/**
	 * Special characters allowed in password.
	 */
	public static final String ALLOWED_SPL_CHARACTERS = "!@#$%^&*()_+";

	public static final String ERROR_CODE = "ERRONEOUS_SPECIAL_CHARS";

	Random random = new SecureRandom();

	public String generatePassayPassword() {
		PasswordGenerator gen = new PasswordGenerator();
		CharacterData lowerCaseChars = EnglishCharacterData.LowerCase;
		CharacterRule lowerCaseRule = new CharacterRule(lowerCaseChars);
		lowerCaseRule.setNumberOfCharacters(2);
		CharacterData upperCaseChars = EnglishCharacterData.UpperCase;
		CharacterRule upperCaseRule = new CharacterRule(upperCaseChars);
		upperCaseRule.setNumberOfCharacters(2);
		CharacterData digitChars = EnglishCharacterData.Digit;
		CharacterRule digitRule = new CharacterRule(digitChars);
		digitRule.setNumberOfCharacters(2);
		CharacterData specialChars = new CharacterData() {

			public String getCharacters() {
				return ALLOWED_SPL_CHARACTERS;
			}

			@Override
			public String getErrorCode() {
				// TODO Auto-generated method stub
				return ERROR_CODE;
			}
		};
		CharacterRule splCharRule = new CharacterRule(specialChars);
		splCharRule.setNumberOfCharacters(2);
		String password = gen.generatePassword(15, splCharRule, lowerCaseRule, upperCaseRule, digitRule);
		return password;
	}

	public static void main(String args[]) {
		System.out.println(new RandomPasswordGenerator().generatePassayPassword());
	}

	public void sendEmail()  {
		UserManager umr = (UserManager)Platform.getService(UserManager.class);
	      User user = umr.getDetails("User Login", userID, null);
	      String userkey = user.getAttribute("usr_key").toString();
	      String sender = "XELSYSADM";
	      String[] receiver = { recieverID };
	      NotificationEvent event = new NotificationEvent();
	      System.out.println("Receivers UserId :" + receiver[0]);
	      event.setUserIds(receiver);
	      event.setTemplateName("RandomPasswordForRegularUsers");
	      event.setSender(sender);
	      String temp = event.getTemplateName();
	      System.out.println("The template name is:" + temp);
	      HashMap params = new HashMap();
	      map.put("usr_login", receiver[0]);
	      map.put("usr_key", userkey);
	      event.setParams(map);
	      System.out.println(" Map contains" + map);
	      NotificationService notificationService = (NotificationService)Platform.getService(NotificationService.class);
	      System.out.println("Event Params" + event.getParams());
	      System.out.println("The sender is :" + event.getSender());
	      notificationService.notify(event);
	}

}
